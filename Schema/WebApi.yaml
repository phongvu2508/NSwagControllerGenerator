openapi: 3.0.0
info:
  description: The Web API for a v6 Instance.
  version: '0.2.0'
  title: Velocity EHS Instance Web API
  contact:
    name: VelocityEHS
    url: https://www.ehs.com
    email: support@ehs.com
servers:
  - url: 'https://odev6web01.ehs.dev/ehs-web-api/api'
    description: Development
tags:
  - name: Account
  - name: GlobalSearch
  - name: Internationalization
  - name: Login
  - name: Hierarchy
  - name: Location
  - name: List
  - name: LocationList
  - name: Navigation
  - name: Person
  - name: Users
paths:
# Account
  '/account/personalization':
    get:
      tags:
      - Account
      summary: Gets the personalization information for an account.
      description: Gets the personalization information for an account.
      operationId: getAccountPersonalization
      responses:
        200:
          description: The personalization of the account that matches the request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Personalization'
            application/xml:
              schema:
                $ref: '#/components/schemas/Personalization'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Account not found
    put:
      summary: Updates a personalization based on account id
      operationId: updateAccountPersonalization
      tags:
        - Account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePersonalization"
          application/xml:
            schema:
              $ref: "#/components/schemas/UpdatePersonalization"
      responses:
        204:
          description: The account was successfully updated
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Account not found
  /account/currency:
    get:
      tags:
      - Account
      summary: Get an account currency list
      description: Get an account currency list
      operationId: getAccountCurrencyList
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - $ref: '#/components/parameters/IdentityHeader'
        - $ref: '#/components/parameters/LanguageHeader'
      responses:
        200:
          description: The currency list of the account that matches the request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Currency List not found
    put:
      tags:
      - Account
      summary: Update an account currency list
      description: Update an account currency list
      operationId: updateAccountCurrencyList
      requestBody:
        description: The updated account currency list
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountCurrencyList'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateAccountCurrencyList'
        required: true
      responses:
        204:
          description: The account was successfully updated.
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: No currency for the account
# Global Search
  '/global-search/getResults':
    post:
      description: Gets the search results for the given search parameters.
      operationId: getGlobalSearchResults
      tags:
        - GlobalSearch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GlobalSearchParameters'
          application/xml:
            schema:
              $ref: '#/components/schemas/GlobalSearchParameters'
      responses:
        '200':
          description: the current users navigation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalSearchResult'
        '204':
          description: Unable to complete search.
#Internationalization
  '/translations/machine':
    post:
      tags:
      - Internationalization
      summary: Create machine translation request
      description: Create machine translation request
      operationId: createMachineTranslationRequest
      requestBody:
        description: The new machine translation request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MachineTranslation'
          application/xml:
            schema:
              $ref: '#/components/schemas/MachineTranslation'
        required: true
      responses:
        201:
          description: The new translation identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status201Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status201Response'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
# Navigation
  '/navigation':
    get:
      description: Get the navigation for the current user.
      operationId: getNavigation
      tags:
        - Navigation
      responses:
        '200':
          description: the current users navigation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Navigation'
# Users
  '/users/me':
    get:
      description: Get the current user.
      operationId: getCurrentUser
      tags:
        - Users
      responses:
        '200':
          description: the current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '204':
          description: The current user could not be found.
    put:
      tags:
      - Users
      summary: Unlocks the current user
      description: Unlocks the current user
      operationId: unlockCurrentUser
      responses:
        204:
          description: The current user was successfully unlocked.
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Current User not found
      security : 
        - simple : []
  '/users/me/setPassword':
    put:
      summary: Update the password for the current user.
      operationId: UpdateCurrentUserPassword
      tags:
        - Users
      requestBody:
        description: Password Parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordParams'
          application/xml:
            schema:
              $ref: '#/components/schemas/PasswordParams'
        required: true
      responses:
        204:
          description: The current user was successfully updated
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Current User not found
      security : 
        - simple : []
# Login
  /login:
    post:
      tags:
      - Login
      description: login the user.
      operationId: login
      requestBody:
        description: The login request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginParams'
          application/xml:
            schema:
              $ref: '#/components/schemas/LoginParams'
        required: true
      responses:
        200:
          description: The login succeeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
  /validatepassword:
    post:
      tags:
      - Login
      summary: Validates Password based on account, person and password rules
      description: Validates Password based on account, person and password rules
      operationId: validatePassword
      requestBody:
        description: The Password Parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordParams'
          application/xml:
            schema:
              $ref: '#/components/schemas/PasswordParams'
        required: true
      responses:
        200:
          description: Password validation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordValidationResult'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Invalid entry for password
      security : 
        - simple : []
  /rules:
    get:
      tags:
      - Login
      summary: Gets the password rules for the account.
      description: Gets the password rules for the account.
      operationId: getPasswordRules
      responses:
        200:
          description: The password rules for the account.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormsAuthPasswordRule'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormsAuthPasswordRule'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: No password rules for the account
      security : 
        - simple : []
  /checktokenexpiry:
    get:
      tags:
      - Login
      summary: Gets the expiry datetime of the json web token.
      description: Gets the expiry datetime of the json web token..
      operationId: gettokenexpiry
      responses:
        200:
          description: The expiry of the token.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenExpiry'
            application/xml:
              schema:
                $ref: '#/components/schemas/TokenExpiry'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Token not found for the account
      security : 
        - simple : []
  '/logout':
    put:
      summary: logout current user.
      operationId: logout
      tags:
        - Login
      responses:
        204:
          description: The current user was successfully logged out
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Current User not found
      security : 
        - simple : []
  
# Hierarchy
  /hierarchies:
    get:
      tags:
      - Hierarchy
      summary: Return a list all Hierarchies
      description: Return a list all Hierarchies
      operationId: getHierarchies
      responses:
        200:
          description: A list of Hierarchies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hierarchy'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hierarchy'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Hierarchies not found
    put:
      tags:
      - Hierarchy
      summary: Update existing Hierarchy
      description: Update existing Hierarchy
      operationId: updateHierarchy
      requestBody:
        description: The updated Hierarchy object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHierarchyParams'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateHierarchyParams'
        required: true
      responses:
        204:
          description: The hierarchy was successfully updated.
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Hierarchy not found
    post:
      tags:
      - Hierarchy
      summary: Create new Hierarchy
      description: Create new Hierarchy
      operationId: createHierarchy
      requestBody:
        description: The new Hierarchy schema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewHierarchyParams'
          application/xml:
            schema:
              $ref: '#/components/schemas/NewHierarchyParams'
        required: true
      responses:
        201:
          description: The new hierarchy identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status201Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status201Response'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
  /hierarchies/{hierarchyId}:
    get:
      tags:
      - Hierarchy
      summary: Get a Hierarchy by id
      description: Get a Hierarchy by id
      operationId: getHierarchy
      parameters:
        - name: hierarchyId
          in: path
          description: The Hierarchy identifier
          required: true
          style: simple
          explode: false
          schema:
            minimum: 1
            type: integer
            format: int32
            nullable: true
      responses:
        200:
          description: A Hierarchy by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hierarchy'
            application/xml:
              schema:
                $ref: '#/components/schemas/Hierarchy'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Hierarchy not found
    delete:
      tags:
      - Hierarchy
      summary: Delete a Hierarchy by Hierarchy id
      description: Delete a Hierarchy by Hierarchy id
      operationId: deleteHierarchy
      parameters:
        - name: hierarchyId
          in: path
          description: The Hierarchy identifier
          required: true
          style: simple
          explode: false
          schema:
            minimum: 0
            type: integer
            format: int32
            nullable: true
      responses:
        204:
          description: Delete Hierarchy result
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Hierarchy not found
# Location
  /locations:
    get:
      tags:
      - Location
      summary: Search for locations by params
      description: Search for locations by params
      operationId: getLocations
      parameters:
        - name: id
          in: query
          description: The location identifier
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 1
        - name: locationType
          in: query
          description: The location type
          required: false
          schema:
            $ref: '#/components/schemas/LocationType'
        - name: hierarchyId
          in: query
          description: The hierarchy identifier
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 11
        - name: locationStatuses
          in: query
          description: The array of selected statuses
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/LocationStatus'
        - name: limit
          in: query
          description: The amount of locations return per request
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 20
        - name: offset
          in: query
          description: The position for first location to be returned in the collection
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 20
      responses:
        200:
          description: A list of locations founded using provided criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Locations not found
    put:
      tags:
      - Location
      summary: Update existing location
      description: Update existing location
      operationId: updateLocation
      requestBody:
        description: The updated location schema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
          application/xml:
            schema:
              $ref: '#/components/schemas/Location'
        required: true
      responses:
        204:
          description: The location was successfully updated.
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Location not found
    post:
      tags:
      - Location
      summary: Create new location
      description: Create new location
      operationId: createLocation
      requestBody:
        description: The new location schema
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewLocationParams'
          application/xml:
            schema:
              $ref: '#/components/schemas/NewLocationParams'
        required: true
      responses:
        201:
          description: The new location identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status201Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status201Response'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
    delete:
      tags:
      - Location
      summary: Delete a location by location id
      description: Delete a location by location id
      operationId: deleteLocation
      parameters:
        - name: id
          in: query
          description: The location identifier
          required: true
          style: form
          explode: true
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: locationType
          in: query
          description: The location type
          required: true
          schema:
            $ref: '#/components/schemas/LocationType'
      responses:
        204:
          description: Location deletion result
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Location not found
  /locations/{locationId}:
    get:
      tags:
      - Location
      summary: Get a location by location id
      description: Get a location by location id
      operationId: getLocationById
      parameters:
        - name: locationId
          in: path
          description: The location identifier
          required: true
          style: simple
          explode: false
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: locationType
          in: query
          description: The location type
          required: true
          schema:
            $ref: '#/components/schemas/LocationType'
      responses:
        200:
          description: A location with provided identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
            application/xml:
              schema:
                $ref: '#/components/schemas/Location'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Location not found
  /locations/search:
    get:
      tags:
      - Location
      summary: Get locations by location name
      description: Get locations by location name
      operationId: getLocationsByName
      parameters:
        - name: locationName
          in: query
          description: The location name
          required: true
          style: form
          explode: false
          schema:
            type: string
        - name: hierarchyId
          in: query
          description: The hierarchy identifier
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
            example: 11
        - name: locationTypes
          in: query
          description: The array of selected location types
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/LocationType'
        - name: locationStatuses
          in: query
          description: The array of selected statuses
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/LocationStatus'
      responses:
        200:
          description: A list of locations founded using provided criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Location not found
  /locations/traverse:
    get:
      tags:
      - Location
      summary: Get locations by traverse the location tree
      description: Get locations by traverse the location tree
      operationId: getTraversedLocations
      parameters:
        - name: id
          in: query
          description: The location identifier
          required: true
          style: form
          explode: true
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: locationType
          in: query
          description: The location type
          required: true
          schema:
            $ref: '#/components/schemas/LocationType'
        - name: hierarchyId
          in: query
          description: The hierarchy identifier
          required: true
          style: form
          explode: true
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: locationStatuses
          in: query
          description: The array of selected statuses
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/LocationStatus'
        - name: levels
          in: query
          description: The number of level to traverse within hierarchy
          required: false
          style: form
          explode: true
          schema:
            minimum: -1
            type: integer
            format: int32
      responses:
        200:
          description: A list of locations founded using provided criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Locations not found
  /locations/childLocations:
    get:
      tags:
      - Location
      summary: Get immediate child locations or location groups
      description: Get immediate child locations or location groups
      operationId: getChildLocations
      parameters:
        - name: id
          in: query
          description: The location identifier
          required: true
          style: form
          explode: true
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: locationTypes
          in: query
          description: The array of selected types
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/LocationType'
        - name: locationStatuses
          in: query
          description: The array of selected statuses
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/LocationStatus'
      responses:
        200:
          description: A list of locations founded using provided criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Locations not found
  /locations/childLocationsCount:
    get:
      tags:
      - Location
      summary: Get child locations count
      description: Get child locations count
      operationId: getChildLocationsCount
      parameters:
        - name: id
          in: query
          description: The location identifier
          required: true
          style: form
          explode: true
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: locationStatuses
          in: query
          description: The array of selected statuses
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/LocationStatus'
        - name: levels
          in: query
          description: The number of level to traverse within hierarchy
          required: false
          style: form
          explode: true
          schema:
            minimum: -1
            type: integer
            format: int32
      responses:
        200:
          description: A count of locations found using provided criteria
          content:
           application/json:
             schema:
               type: integer
               format: int32
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Locations not found
  /locations/childLocationGroupsCount:
    get:
      tags:
      - Location
      summary: Get child location groups count
      description: Get child location groups count
      operationId: getChildLocationGroupsCount
      parameters:
        - name: id
          in: query
          description: The location identifier
          required: true
          style: form
          explode: true
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: locationStatuses
          in: query
          description: The array of selected statuses
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/LocationStatus'
        - name: levels
          in: query
          description: The number of level to traverse within hierarchy
          required: false
          style: form
          explode: true
          schema:
            minimum: -1
            type: integer
            format: int32
      responses:
        200:
          description: A count of locations found using provided criteria
          content:
           application/json:
             schema:
               type: integer
               format: int32
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Locations not found
  /locations/move:
    post:
      tags:
      - Location
      summary: Move location and all children under another location group
      description: Move location and all children under another location group
      operationId: moveLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovingLocationParams'
          application/xml:
            schema:
              $ref: '#/components/schemas/MovingLocationParams'
        required: true
      responses:
        204:
          description: The location successfully moved.
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Location not found
# Lists
  /lists:
    get:
      summary: Search for lists based on params
      description: Search for lists based on params
      operationId: getLists
      tags:
        - List
      parameters:
        - in: query
          name: statusFilters
          description: The array of selected statuses to include
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
              example: 1
      responses:
        200:
          description: A list of lists found using provided criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/List'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Lists not found
    put:
      summary: Update existing list
      description: Update existing list
      operationId: updateList
      tags: 
        - List
      requestBody:
        description: The updated list schema
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/List"
          application/xml:
            schema:
              $ref: "#/components/schemas/List"
      responses:
        204:
          description: The list was successfully updated.
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: List not found
    post:
      summary: Create new list
      description: Create new list
      operationId: createList
      tags: 
        - List
      requestBody:
        description: The list schema
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/List"
          application/xml:
            schema:
              $ref: "#/components/schemas/List"
      responses:
        201:
          description: The new list identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status201Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status201Response'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
    delete:
      summary: Delete a list by list id
      description: Delete a list by list id
      operationId: deleteList
      tags:
        - List
      parameters:
        - in: query
          name: listId
          description: The list identifier
          required: true
          schema:
            minimum: 0
            type: integer
            format: int32
      responses:
        204:
          description: List deletion result
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: List not found
  /lists/items:
    get:
      summary: Search for list items based on params
      description: Search for list items based on params
      operationId: getListItems
      tags:
        - List
      parameters:
        - in: query
          name: listId
          description: The list the list items retrieved belong to (null will return all lists)
          required: false
          schema:
            type: integer
            format: int32
            example: 1
        - in: query
          name: listStatusFilters
          description: The array of selected statuses of lists to include
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
              example: 1
        - in: query
          name: listItemStatusFilters
          description: The array of selected statuses list items to include
          required: false
          schema:
            type: array
            items:
              type: integer
              format: int32
              example: 1
      responses:
        200:
          description: A list of list items found using provided criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListItem'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: List item not found
    put:
      summary: Update existing list item
      description: Update existing list item
      operationId: updateListItem
      tags: 
        - List
      requestBody:
        description: The updated list item schema
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateListItemParams"
          application/xml:
            schema:
              $ref: "#/components/schemas/UpdateListItemParams"
      responses:
        204:
          description: The list item was successfully updated
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: List Item not found
    post:
      summary: Create new list item
      description: Create new list item
      operationId: createListItem
      tags: 
        - List
      requestBody:
        description: The new list item schema
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewListItemParams"
          application/xml:
            schema:
              $ref: "#/components/schemas/NewListItemParams"
      responses:
        201:
          description: The new list item identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status201MultipleResponses'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status201MultipleResponses'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
    delete:
      summary: Delete a list item by list item id
      description: Delete a list item by list item id
      operationId: deleteListItem
      tags:
        - List
      parameters:
        - in: query
          name: listItemId
          description: The list item identifier
          required: true
          schema:
            minimum: 0
            type: integer
            format: int32
      responses:
        204:
          description: List Item deletion result
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: List Item not found
  /lists/items/reorder:
    put:
      summary: Reorders all list items in a list
      description: Reorders all list items in a list
      operationId: ReorderListItem
      tags:
        - List
      requestBody:
        description: The reorder list item schema
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReorderListItemParams"
          application/xml:
            schema:
              $ref: "#/components/schemas/ReorderListItemParams"
      responses:
        204:
          description: The list item reorder was successfully updated
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: List Item not found
# LocationLists
  /locationlists/{listId}:
    get:
      tags:
      - LocationList
      summary: Get a list of available location Ids by location list identifier
      description: Get a list of available location Ids by location list identifier
      operationId: getLocationListAvailabilityById
      parameters:
        - name: listId
          in: path
          description: The location list identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: A List of available location identifier for this location list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationListAvailability'
            application/xml:
              schema:
                $ref: '#/components/schemas/LocationListAvailability'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Location list not found
    put:
      tags:
      - LocationList
      summary: Set availability for a location list
      description: Set availability for a location list
      operationId: setLocationListAvailability
      parameters:
        - name: listId
          in: path
          description: The location list identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      requestBody:
        description: The updated availability for selected location list
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocationListAvailabilityDetails"
          application/xml:
            schema:
              $ref: "#/components/schemas/LocationListAvailabilityDetails"
      responses:
        204:
          description: The availability was successfully updated
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Location list not found
    post:
      tags:
      - LocationList
      summary: Get availability location structure for a location list
      description: Set availability for a location list
      operationId: getLocationListAvailabilityStructure
      parameters:
      - name: listId
        in: path
        description: The location list identifier
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: locationId
        in: query
        description: The location identifier
        required: true
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: locationType
        in: query
        description: The location type
        required: true
        schema:
          $ref: '#/components/schemas/LocationType'
      - name: hierarchyId
        in: query
        description: The hierarchy identifier
        required: true
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: levels
        in: query
        description: The number of level to traverse within hierarchy
        required: false
        style: form
        explode: true
        schema:
          minimum: -1
          type: integer
          format: int32
      responses:
        200:
          description: A list of locations with statuses founded using provided criteria
          content:
            application/json:
                schema:
                  type: array
                  items:
                      $ref: '#/components/schemas/Location'
        400:
          description: Bad request
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/RequestError'
            application/xml:
                schema:
                  $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Location list not found
  /locationlists/locations/{locationId}:
    get:
      tags:
      - LocationList
      summary: Get a list of available location list Ids by location identifier
      description: Get a list of available location list Ids by location identifier
      operationId: getLocationListAvailabilityByLocationId
      parameters:
        - name: locationId
          in: path
          description: The location identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
        - name: locationType
          in: query
          description: The location type
          required: true
          schema:
            $ref: '#/components/schemas/LocationType'
      responses:
        200:
          description: A List of available location list identifier for this location
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
            application/xml:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Location not found
  /locationlists/items/{listItemId}:
    get:
      tags:
      - LocationList
      summary: Get a list of available location Ids by location list item identifier
      description: Get a list of available location Ids by location list item identifier
      operationId: getLocationListItemAvailabilityById
      parameters:
        - name: listItemId
          in: path
          description: The location list item identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: A List of available location identifier for this location list item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationListAvailability'
            application/xml:
              schema:
                $ref: '#/components/schemas/LocationListAvailability'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Location list item not found
    put:
      tags:
      - LocationList
      summary: Set availability for a location list item
      description: Set availability for a location list item
      operationId: setLocationListItemAvailability
      parameters:
        - name: listItemId
          in: path
          description: The location list item identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      requestBody:
        description: The updated availability for selected location list item
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocationListAvailabilityDetails"
          application/xml:
            schema:
              $ref: "#/components/schemas/LocationListAvailabilityDetails"
      responses:
        204:
          description: The availability was successfully updated
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Location list item not found
    post:
      tags:
      - LocationList
      summary: Get availability location structure for a location list item
      description: Get availability location structure for a location list item
      operationId: getLocationListItemAvailabilityStructure
      parameters:
      - name: listItemId
        in: path
        description: The location list item identifier
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: locationId
        in: query
        description: The location identifier
        required: true
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: locationType
        in: query
        description: The location type
        required: true
        schema:
          $ref: '#/components/schemas/LocationType'
      - name: hierarchyId
        in: query
        description: The hierarchy identifier
        required: true
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
      - name: levels
        in: query
        description: The number of level to traverse within hierarchy
        required: false
        style: form
        explode: true
        schema:
          minimum: -1
          type: integer
          format: int32
      responses:
        200:
          description: A list of locations with statuses founded using provided criteria
          content:
            application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Location'
        400:
          description: Bad request
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/RequestError'
            application/xml:
                schema:
                  $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Location list not found
  /locationlists/items/locations/{locationId}:
    get:
      tags:
      - LocationList
      summary: Get a list of available location list item Ids by parent List and location identifier
      description: Get a list of available location list item Ids by parent List and by location identifier
      operationId: getLocationListItemAvailabilityByLocationId
      parameters:
        - name: locationId
          in: path
          description: The location identifier
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
        - name: listId
          in: query
          description: The parent list identifier
          required: true
          schema:
            type: integer
            format: int32
        - name: locationType
          in: query
          description: The location type
          required: true
          schema:
            $ref: '#/components/schemas/LocationType'
      responses:
        200:
          description: A List of available location item list identifier for this location
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
            application/xml:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Location not found
# Person
  /persons:
    get:
      tags:
        - Person
      summary: Search for persons by params
      description: Search for persons by params
      operationId: getPersons
      parameters:
        - name: employmentStatus
          in: query
          description: 'Status of the person ( active = 11, inactive = 12 )'
          required: false
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
        - name: displayName
          in: query
          description: Display Name of the Person
          required: false
          style: form
          explode: true
          schema:
            type: string
            nullable: true
        - name: location
          in: query
          description: Associated Location to the person
          required: false
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
        - name: emailAddress
          in: query
          description: Email address of the person
          required: false
          style: form
          explode: true
          schema:
            type: string
            nullable: true
        - name: firstName
          in: query
          description: First Name of the person
          required: false
          style: form
          explode: true
          schema:
            type: string
            nullable: true
        - name: lastName
          in: query
          description: Last Name of the person
          required: false
          style: form
          explode: true
          schema:
            type: string
            nullable: true
        - name: countryDivision
          in: query
          description: State or Province of the person
          required: false
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
        - name: country
          in: query
          description: Country of the person
          required: false
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
        - name: relationshipToCompany
          in: query
          description: Relationship Type
          required: false
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
        - name: contractingCompany
          in: query
          description: Contracting company of the person
          required: false
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
        - name: customerName
          in: query
          description: Customer's Name of the Person
          required: false
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
        - name: supervisor
          in: query
          description: Supervisor of the Person
          required: false
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
        - name: startDateStart
          in: query
          description: Start date of range for Hire Date of the Person
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
            nullable: true
        - name: startDateEnd
          in: query
          description: End date of range for Hire Date of the Person
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
            nullable: true
        - name: endDateStart
          in: query
          description: Start date of range for End Date of the Person
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
            nullable: true
        - name: endDateEnd
          in: query
          description: End date of range for End Date of the Person
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
            nullable: true
        - name: currentPositionStartDateStart
          in: query
          description: Start date of range for Current Position Start Date of the Person
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
            nullable: true
        - name: currentPositionStartDateEnd
          in: query
          description: End date of range for Current Position Start Date of the Person
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
            nullable: true
        - name: employeeID
          in: query
          description: EmployeeID
          required: false
          style: form
          explode: true
          schema:
            type: string
            nullable: true
        - name: currentPosition
          in: query
          description: Current Position of the Person
          required: false
          style: form
          explode: true
          schema:
            type: string
            nullable: true
        - name: loginAccessRequired
          in: query
          description: Person requires login access or not
          required: false
          style: form
          explode: true
          schema:
            type: boolean
            nullable: true
        - name: username
          in: query
          description: Username of the person
          required: false
          style: form
          explode: true
          schema:
            type: string
            nullable: true
        - name: loginExpirationDateStart
          in: query
          description: Start date of range for Expiry Date of the Person
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
            nullable: true
        - name: loginExpirationDateEnd
          in: query
          description: End date of range for Expiry Date of the Person
          required: false
          style: form
          explode: true
          schema:
            type: string
            format: date-time
            nullable: true
        - name: contactPreference
          in: query
          description: Contact Type of the person email/phone
          required: false
          style: form
          explode: true
          schema:
            type: array
            nullable: true
            items:
              type: integer
              format: int32
        - name: pageNumber
          in: query
          description: Page Number of the Person
          required: false
          style: form
          explode: true
          schema:
            type: integer
            nullable: true
        - name: pageSize
          in: query
          description: Page Size of the Person
          required: false
          style: form
          explode: true
          schema:
            type: integer
            nullable: true
        - name: sortBy
          in: query
          description: Param for sortBy
          required: false
          style: form
          explode: true
          schema:
            type: string
            nullable: true
        - name: sortOrder
          in: query
          description: Param for sortOrder
          required: false
          style: form
          explode: true
          schema:
            type: string
            nullable: true
            maxLength: 4
      responses:
        200:
          description: A list of persons founded using provided criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Persons not found
    put:
      summary: Updates a person based on person id
      operationId: UpdatePerson
      tags:
        - Person
      requestBody:
        description: The updated person schema
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePersonParams'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdatePersonParams'
      responses:
        204:
          description: The person was successfully updated
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Persons not found
    post:
      summary: Creates a new person and returns the person id 
      operationId: CreatePerson
      tags:
        - Person
      requestBody:
        description: The created person schema
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
          application/xml:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        201:
          description: The new person identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status201Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Status201Response'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Person not found
    delete:
      tags:
        - Person
      summary: Delete a person by person id
      description: Delete a person by person id
      operationId: deletePerson
      parameters:
        - name: personId
          in: query
          description: The person identifier
          required: true
          style: form
          explode: true
          schema:
            minimum: 0
            type: integer
            format: int32
      responses:
        204:
          description: Person has been deleted
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Person not found
  /persons/{personId}:
    get:
      summary: Returns the person based on person id
      operationId: GetPersonById
      tags:
        - Person
      parameters:
        - in: path
          name: personId
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
            application/xml:
              schema:
                $ref: '#/components/schemas/Person'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Person not found
  '/persons/{personId}/personalization':
    get:
      summary: Returns the person's personalization based on person id
      operationId: getPersonPersonalization 
      tags:
        - Person
      parameters:
        - in: path
          name: personId
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Personalization'
            application/xml:
              schema:
                $ref: '#/components/schemas/Personalization'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Person not found
    put:
      summary: Updates a personalization based on person id
      operationId: updatePersonPersonalization
      tags:
        - Person
      parameters:
        - in: path
          name: personId
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdatePersonalization"
          application/xml:
            schema:
              $ref: "#/components/schemas/UpdatePersonalization"
      responses:
        204:
          description: The person was successfully updated
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Persons not found
  /persons/search/{name}:
    get:
      summary: Returns persons based on name
      operationId: GetPersonsByName
      tags:
        - Person
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
        - name: pageNumber
          in: query
          description: Page Number of the Person
          required: false
          style: form
          explode: true
          schema:
            type: integer
            nullable: true
        - name: pageSize
          in: query
          description: Page Size of the Person
          required: false
          style: form
          explode: true
          schema:
            type: integer
            nullable: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
            application/xml:
              schema:
                $ref: '#/components/schemas/RequestError'
        403:
          description: You do not have sufficient rights to this resource
        404:
          description: Persons not found
components:
  parameters:
    AccountHeader:
      name: x-account
      in: header
      description: Unique identifier for the customer account
      required: true
      schema:
        type: string
        format: uuid
    IdentityHeader:
      name: x-identity
      in: header
      description: Unique identifier for the identity accessing the account
      required: true
      schema:
        type: string
        format: uuid
    LanguageHeader:
      name: x-language
      in: header
      description: The unique identifier for selected language
      required: false
      style: simple
      explode: false
      schema:
        type: integer
        format: int32
  schemas:
# GlobalSearch
    GlobalSearchItem:
      type: object
      additionalProperties: false
      properties:
        Id:
          nullable: false 
          type: integer
        Name:
          nullable: true 
          type: string
    GlobalSearchParameters:
      type: object
      additionalProperties: false
      properties:
        SearchTerm:
          nullable: true 
          type: string
    GlobalSearchResult:
      type: object
      additionalProperties: false
      properties:
        Items:
          nullable: true 
          type: array
          items:
            $ref: '#/components/schemas/GlobalSearchItem'
        TotalResultCount:
          nullable: false
          type: integer
          example: 1
# Navigation
    Navigation:
      type: object
      additionalProperties: false
      properties:
        MegaMenu:
          nullable: true 
          type: array
          items:
            $ref: '#/components/schemas/NavigationMenu'
        ConfigurationMenu:
          nullable: true 
          allOf:
          - $ref: '#/components/schemas/NavigationMenu'
          - type: object
        HelpMenu:
          nullable: true 
          allOf:
          - $ref: '#/components/schemas/NavigationMenu'
          - type: object
        VelocityRibbon:
          nullable: true 
          type: array
          items:
            $ref: '#/components/schemas/NavigationElement'
        Settings:
          nullable: true 
          allOf:
          - $ref: '#/components/schemas/NavigationSettings'
          - type: object
    NavigationMenu:
      type: object
      additionalProperties: false
      properties:
        Key:
          nullable: false 
          type: string
        DisplayName:
          nullable: true 
          type: string
        Groups:
          nullable: true 
          type: array
          items:
            $ref: '#/components/schemas/NavigationElementGroup'
    NavigationElementGroup:
      type: object
      additionalProperties: false
      properties:
        Key:
          nullable: false 
          type: string
        DisplayName:
          nullable: true 
          type: string
        Links:
          nullable: true 
          type: array
          items:
            $ref: '#/components/schemas/NavigationElement'
    NavigationElement:
      type: object
      additionalProperties: false
      properties:
        Key:
          nullable: false 
          type: string
        DisplayName:
          nullable: true 
          type: string
        LinkUrl:
          nullable: true 
          type: string
        NewTab:
          nullable: false 
          type: boolean
    NavigationSettings:
      type: object
      additionalProperties: false
      properties:
        ColourBarColour:
          nullable: true 
          type: string
        AccountLogoFilePath:
          nullable: true 
          type: string
        UserProfileAvailable:
          type: boolean
        LogoutAvailable:
          type: boolean
    User:
      type: object
      additionalProperties: false
      properties:
        AccountPersonID:
          nullable: false 
          type: integer
          example: 99
        FirstName:
          nullable: true 
          type: string
          example: John
        LastName:
          nullable: true
          type: string
          example: Doe
# Common
    RequestError:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: integer
          description: The error code if existed
          format: int32
          example: 61001
        message:
          type: string
          description: The error message
          format: string
          example: validation errors
        errors:
          type: array
          description: the array of nested detail errors
          items:
              $ref: '#/components/schemas/RequestErrorDetail'
    RequestErrorDetail:
      type: object
      properties:
        code:
          type: integer
          description: The error code if existed
          format: int32
          example: 001
        name:
          type: string
          description: The error name / attribute name
          format: string
          example: displayName
        message:
          type: string
          description: The error message
          format: string
          example: displayName required
    Status201Response:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          description: The new object identifier
          format: int32
          example: 11
    Status201MultipleResponses:
      required:
      - ids
      type: object
      properties:
        ids:
          type: array
          description: The new object identifiers
          items:
            type: integer
            format: int32
            example: 11
# Hierarchies
    Hierarchy:
      type: object
      required:
        - HierarchyType
      properties:
        Name:
          description: The Hierarchy name
          type: string
          format: string
          example: Oakville
        IsDefault:
          description: Idendifying hierarchy as Default or not
          type: boolean
          format: bool
          example: 0
        HierarchyId:
          description: The hierarchy identifier
          type: integer
          format: int32
          example: 11
          nullable: true
    NewHierarchyParams:
      type: object
      required:
        - Name
        - IsDefault
      properties:
        Name:
          description: The Hierarchy name
          type: string
          format: string
          example: Oakville
        IsDefault:
          description: Idendifying hierarchy as Default or not
          type: boolean
          format: bool
          example: 0
    UpdateHierarchyParams:
      type: object
      required:
        - HierarchyId
      properties:
        Name:
          description: The Hierarchy name
          type: string
          format: string
          example: Oakville
          nullable: true
        IsDefault:
          description: Idendifying hierarchy as Default or not
          type: boolean
          format: bool
          example: 0
          nullable: true
        HierarchyId:
          description: The hierarchy identifier
          type: integer
          format: int32
          example: 11
# Locations
    Location:
      required:
      - locationType
      type: object
      properties:
        id:
          type: integer
          nullable: true
          description: The location identifier
          format: int32
          example: 12
        name:
          type: string
          nullable: true
          description: The location name
          format: string
          example: Chicago
        locationType:
          $ref: '#/components/schemas/LocationType'
        locationStatus:
          $ref: '#/components/schemas/LocationStatus'
        parentId:
          type: integer
          nullable: true
          description: The location parent identifiers
          format: int32
          example: 1
        hierarchyId:
          type: integer
          nullable: true
          description: The hierarchy identifier
          format: int32
          example: 10
        paths:
          type: array
          nullable: true
          description: The location path
          items:
            type: string
        isAvailable:
          type: boolean
          nullable: true
          description: The available status for Location List
          format: boolean
          example: true
        sicCode:
          type: string
          nullable: true
          description: The SIC code
          format: string
          example: 0387
        naicsCode:
          type: integer
          nullable: true
          description: The NAICS code
          format: int32
          example: 336212
        oshaEstablishmentName:
          type: string
          nullable: true
          description: The OSHA Establishment Name
          format: string
          example: Springdale Water
        oshaEstablishmentTypeId:
          type: integer
          nullable: true
          description: The OSHA establishment type identifier
          format: int32
          example: 10
        streetAddress:
          type: string
          nullable: true
          description: The street address
          format: string
          example: 586 Argus Road
        city:
          type: string
          nullable: true
          description: The city name
          format: string
          example: Chicago
        zipCode:
          type: string
          nullable: true
          description: The zip code
          format: string
          example: 90210
        stateId:
          type: integer
          nullable: true
          description: The state identifier
          format: int32
          example: 10
        industryDescription:
          type: string
          nullable: true
          description: The industry description
          format: string
          example: Manufacture of motor truck trailers
    MovingLocationParams:
      required:
      - locationId
      - locationType
      - parentId
      type: object
      properties:
        locationId:
          type: integer
          description: The location identifier
          format: int32
          example: 12
        locationType:
          $ref: '#/components/schemas/LocationType'
        parentId:
          type: integer
          description: The location parent identifier
          format: int32
          example: 1
    NewLocationParams:
      required:
      - locationType
      - name
      type: object
      properties:
        name:
          type: string
          description: The location name
          format: string
          example: Chicago
        locationType:
          $ref: '#/components/schemas/LocationType'
        locationStatus:
          $ref: '#/components/schemas/LocationStatus'
        parentIds:
          type: array
          description: The array of location parent identifiers
          items:
            type: integer
            format: int32
            example: 1
        hierarchyId:
          type: integer
          nullable: true
          description: The hierarchy identifier
          format: int32
          example: 10
        sicCode:
          type: string
          nullable: true
          description: The SIC code
          format: string
          example: 0387
        naicsCode:
          type: integer
          nullable: true
          description: The NAICS code
          format: int32
          example: 336212
        oshaEstablishmentName:
          type: string
          nullable: true
          description: The OSHA Establishment Name
          format: string
          example: Springdale Water
        oshaEstablishmentTypeId:
          type: integer
          nullable: true
          description: The OSHA establishment type identifier
          format: int32
          example: 10
        streetAddress:
          type: string
          nullable: true
          description: The street address
          format: string
          example: 586 Argus Road
        city:
          type: string
          nullable: true
          description: The city name
          format: string
          example: Chicago
        zipCode:
          type: string
          nullable: true
          description: The zip code
          format: string
          example: 90210
        stateId:
          type: integer
          nullable: true
          description: The state identifier
          format: int32
          example: 10
    LocationType:
      type: string
      enum:
        - Group
        - Location
    LocationStatus:
      type: string
      enum:
        - Active
        - Inactive
        - Archived
# Lists
    ListItem:
      type: object
      properties:
        listitemid: 
          type: integer
        listid:
          type: integer
        editable:
          type: boolean
          nullable: true
        itemorder:
          type: integer
          nullable: true
        statusid:
          type: integer
          nullable: true
        value:
          type: string
          nullable: true
    NewListItemParams:
      type: object
      properties:
        listid:
          type: integer
        value:
          description: The array of list item values
          type: array
          items:
            type: string
    UpdateListItemParams:
      type: object
      properties:
        listitemid: 
          type: integer
        editable:
          type: boolean
          nullable: true
        statusid:
          type: integer
          nullable: true
        value:
          type: string
          nullable: true
    ReorderListItemParams:
      type: object
      properties:
        listid:
          type: integer
        listitems:
          description: The array of list item values
          type: array
          items:
            $ref: '#/components/schemas/ListItem'
    List:
      type: object
      properties:
        listid:
          type: integer
        orderable:
          type: boolean
          nullable: true
        editable:
          type: boolean
          nullable: true
        statusid:
          type: integer
          nullable: true
        itemsorderable:
          type: boolean
          nullable: true
        itemseditable:
          type: boolean
          nullable: true
        value:
          type: string
          nullable: true
# Location Lists
    LocationListAvailability:
        type: object
        properties:
            location:
                description: The array of location identifiers
                type: array
                example: [ 1, 12]
                items:
                    type: integer
                    format: int32
            locationGroup:
                description: The array of location group identifiers
                type: array
                example: [ 1, 12]
                items:
                    type: integer
                    format: int32
    LocationListAvailabilityDetails:
        type: object
        properties:
            location:
                description: The array statuses for locations
                type: object
                additionalProperties:
                  type: boolean
            locationGroup:
                description: The array statuses for location groups
                type: object
                additionalProperties:
                  type: boolean
# Person
    Person:
      type: object
      properties:
        personId:
          type: integer
          nullable: true
        locations:
          type: array
          nullable: true
          items:
            type: integer
        locationNames:
          type: object
          additionalProperties:
            type: string
          example: {"1": "Toronto", "2": "Oakville"}
        loginAccessRequired:
          type: boolean
          nullable: true
        username:
          type: string
          nullable: true
          example: noreply@ehs.com
        statusId:
          type: integer
          nullable: true
          example: 12
        statusName:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
          example: John
        lastName:
          type: string
          nullable: true
          example: Doe
        genderId: 
          type: integer
          nullable: true
        gender:
          type: string
          nullable: true
        dateOfBirth:
          format: date-time
          type: string
          nullable: true
          example: "1995-09-07 10:40:52"
        phoneNumber:
          type: string
          nullable: true
          example: 555-123-4567
        mobileNumber:
          type: string
          nullable: true
          example: 555-987-6543
        email:
          type: string
          nullable: true
          example: noreply@ehs.com
        address:
          type: string
          nullable: true
          example: 123 New Street
        city:
          type: string
          nullable: true
          example: Ottawa
        countryDivisionId:
          type: integer
          nullable: true
        countryDivisionName:
          type: string
          nullable: true
        countryId:
          type: integer
          nullable: true
        CountryName:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
          example: A1A 1A1
        languageId:
          type: integer
          nullable: true
        relationshipTypeId:
          type: integer
          nullable: true
        relationshipType:
          type: string
          nullable: true
        currentPosition:
          type: string
          nullable: true
          example: EHS Manager
        supervisorId:
          type: integer
          nullable: true
        supervisorName:
          type: string
          nullable: true
        hireDate:
          type: string
          format: date-time
          nullable: true
          example: "2000-01-01"
        endDate:
          type: string
          format: date-time
          nullable: true
          example: "2019-01-01"
        currentpositionStartDate:
          type: string
          format: date-time
          nullable: true
          example: "2010-01-01"
        employeeId:
          type: string
          nullable: true
          example: ABC123456
        contractingCompanyId:
          type: integer
          nullable: true
        contractingCompanyName:
          type: string
          nullable: true
        customerId:
          type: integer
          nullable: true
        customerName:
          type: string
          nullable: true
        locked:
          type: boolean
          nullable: true
          example: false
        contactTypeId:
          type: integer
          nullable: true
        contactTypeName:
          type: string
          nullable: true
        expiryDate:
          type: string
          format: date-time
          nullable: true
          example: "2029-01-01 12:00:00"
        createdByPersonId:
          type: integer
          nullable: true
        personDetails:
          type: string
          nullable: true
          example: "FirstName-LastName-JobTitle"
    UpdatePersonParams:
      type: object
      properties:
        personId:
          type: integer
          nullable: true
        updatedByPersonId:
          type: integer
          nullable: true
        statusId:
          type: integer
          nullable: true
          example: 12
        loginAccessRequired:
          type: boolean
          nullable: true
        displayName:
          type: string
          nullable: true
        username:
          type: string
          nullable: true
          example: noreply@ehs.com
        addLocations:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
            example: 1
        deleteLocations:
          type: array
          nullable: true
          items:
            type: integer
            format: int32
            example: 1
        firstName:
          type: string
          nullable: true
          example: John
        lastName:
          type: string
          nullable: true
          example: Doe
        genderId: 
          type: integer
          nullable: true
        dateOfBirth:
          format: date-time
          type: string
          nullable: true
          example: "1995-09-07 10:40:52"
        phoneNumber:
          type: string
          nullable: true
          example: 555-123-4567
        mobileNumber:
          type: string
          nullable: true
          example: 555-987-6543
        email:
          type: string
          nullable: true
          example: noreply@ehs.com
        address:
          type: string
          nullable: true
          example: 123 New Street
        city:
          type: string
          nullable: true
          example: Ottawa
        countryDivisionId:
          type: integer
          nullable: true
        countryId:
          type: integer
          nullable: true
        postalCode:
          type: string
          nullable: true
          example: A1A 1A1
        RelationshipTypeId:
          type: integer
          nullable: true
        currentPosition:
          type: string
          nullable: true
          example: EHS Manager
        supervisorId:
          type: integer
          nullable: true
        hireDate:
          type: string
          format: date-time
          nullable: true
          example: "2000-01-01"
        endDate:
          type: string
          format: date-time
          nullable: true
          example: "2019-01-01"
        currentpositionStartDate:
          type: string
          format: date-time
          nullable: true
          example: "2010-01-01"
        employeeId:
          type: string
          nullable: true
          example: ABC123456
        contractingCompanyId:
          type: integer
          nullable: true
        customerId:
          type: integer
          nullable: true
        contactTypeId:
          type: integer
          nullable: true
        locked:
          type: boolean
          nullable: true
          example: false
        expiryDate:
          type: string
          format: date-time
          nullable: true
          example: "2029-01-01 12:00:00"
        personDetails:
          type: string
          nullable: true
          example: "FirstName-LastName-JobTitle"
# Personalization
    Personalization:
      type: object
      properties:
        personId:
          description: The unique person id
          type: integer
          nullable: true
          example: 1
        dateFormat:
          description: The dateFormat for personalization
          type: string
          format: string
          nullable: true
          example: "YYYY-MM-DD"
        dateFormatUserPreference:
          description: The Preference of dateFormat for personalization
          type: boolean
          nullable: true
          example: true
        numberFormat:
          description: The numberFormat for personalization
          type: string
          format: string
          nullable: true
          example: "#,###.##"
        numberFormatUserPreference:
          description: The Preference of numberFormat for personalization
          type: boolean
          nullable: true
          example: true
        timeFormat:
          description: The timeFormat for personalization
          type: string
          format: string
          nullable: true
          example: "12-HourClock"
        timeFormatUserPreference:
          description: The Preference of timeFormat for personalization
          type: boolean
          nullable: true
          example: true
        timeZoneId:
          description: Time zone Id for personalization
          type: integer
          format: int32
          nullable: true
          example: 1
        timeZoneName:
          description: The timeZoneName for personalization
          type: string
          format: string
          nullable: true
          example: "Eastern Standard Time"
        timeZoneOffset:
          description: The timeZoneOffset for personalization
          type: number
          nullable: true
          example: 11.111
        currencyId:
          description: Currency Id for personalization
          type: integer
          format: int32
          nullable: true
          example: 1
        currencyCode:
          description: The currencyCode for personalization
          type: string
          format: string
          nullable: true
          example: "CAD"
        unitSystemId:
          description: unitSystem Id for personalization
          type: integer
          format: int32
          nullable: true
          example: 1
        unitSystem:
          description: unitSystem for personalization
          type: string
          format: string
          nullable: true
          example: "Customary(US)"
        unitSystemUserPreference:
          description: The Preference of unitSystem for personalization
          type: boolean
          nullable: true
          example: true
    UpdatePersonalization:
      type: object
      properties:
        personId:
          description: The unique person id
          type: integer
          format: int32
          nullable: true
          example: 1
        dateFormat:
          description: The dateFormat for personalization
          type: string
          format: string
          nullable: true
          example: "YYYY-MM-DD"
        dateFormatUserPreference:
          description: The Preference of dateFormat for personalization
          type: boolean
          nullable: true
          example: true
        numberFormat:
          description: The numberFormat for personalization
          type: string
          format: string
          nullable: true
          example: "#,###.##"
        numberFormatUserPreference:
          description: The Preference of numberFormat for personalization
          type: boolean
          nullable: true
          example: true
        timeFormat:
          description: The timeFormat for personalization
          type: string
          format: string
          nullable: true
          example: "12-HourClock"
        timeFormatUserPreference:
          description: The Preference of timeFormat for personalization
          type: boolean
          nullable: true
          example: true
        timeZoneId:
          description: Time zone Id for personalization
          type: integer
          format: int32
          nullable: true
          example: 1
        currencyId:
          description: Currency Id for personalization
          type: integer
          format: int32
          nullable: true
          example: 1
        unitSystemId:
          description: unitSystem Id for personalization
          type: integer
          format: int32
          nullable: true
          example: 1
        unitSystemUserPreference:
          description: The Preference of unitSystem for personalization
          type: boolean
          nullable: true
          example: true
# Internationalization
    MachineTranslation:
      type: object
      properties:
        personId:
          description: Unique Id of person
          type: integer
          nullable: true
          example: 1
        originalLanguage:
          description:  Original Language
          type: string
          format: string
          nullable: true
          example: "Korean"
        translatedLanguageId:
          description: Id of Translated Language
          type: integer
          nullable: true
          example: 1
# Account
    UpdateAccountCurrencyList:
      type: object
      properties:
        addCurrencyIdList:
          description: list of currency Id list to add
          type: array
          nullable: true
          items:
            type: integer
            format: int32
            example: [ 1, 2 ]
        deleteCurrencyIdList:
          description: list of currency Id list to delete
          type: array
          nullable: true
          items:
            type: integer
            format: int32
            example: [ 1, 2 ]
# Login
    LoginParams:
      type: object
      properties:
        accountid:
          description: The account id
          type: integer
          format: int32
          nullable: true
          example: 1
        languageid:
          description: The language id
          type: integer
          format: int32
          nullable: true
          example: 1
        username:
          description: The username
          type: string
          format: string
          nullable: true
          example: "hello@test.com"
        password:
          description: The password
          type: string
          format: string
          nullable: true
          example: "####"
    PasswordParams:
      type: object
      properties:
        password:
          description: The password
          type: string
          format: string
          nullable: true
          example: "####"
    LoginResponse:
      type: object
      properties:
        token:
          description: The jwt token generated
          type: string
          format: string
          nullable: true
          example: "adsfadsasdf"
        identityverificationrequired:
          description: An identity verification required
          type: boolean
          nullable: true
          example: true
        passwordchangerequired:
          description: A password change is required
          type: boolean
          nullable: true
          example: true
    PasswordValidationResult:
      type: object
      properties:
        isvalid:
          description: boolean if password validation succeeded
          format: bool
          type: boolean
          example: 0
        unfollowedrules:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/FormsAuthPasswordRule'
    FormsAuthPasswordRule:
      type: object
      properties:
        ruleId:
          description: The id of the password rule.
          type: integer
          format: int32
          nullable: true
          example: 66
        description:
          description: The description of the password rule.
          type: string
          nullable: true
          example: "At least one uppercase character"
        value:
          description: The value for the rule.
          type: integer
          format: int32
          nullable: true
          example: 1
    TokenExpiry:
      type: object
      properties:
        tokenexpiry:
          description: Token Expiry
          format: date-time
          type: string
          nullable: true
          example: "1995-09-07 10:40:52"
        epochvalue:
          description: The epoch remaining time.
          type: integer
          format: int64
          nullable: true
          example: 1
# Localization
    Currency:
      type: object
      properties:
        currencyId:
          description: Currency Id
          type: integer
          nullable: true
          example: 1
        currencyCode:
          description: Currency Code
          type: string
          nullable: true
          example: "GBP"
        currencyDescription:
          description: Currency Description
          type: string
          nullable: true
          example: "Pounds Sterling"
        defaultCurrency:
          description: Default Currency
          type: boolean
          nullable: true
          example: true